{"version":3,"sources":["index.js"],"names":["window","document","key","elementsId","elements","querySelectorAll","index","preventDefault","event","hasClosed","element","length","attributes","printDocument","hideRequests","parentElement","remove","toggleDetails","currentTarget","removeAttribute","openAttribute","xhttp","onreadystatechange","open","readyState","this","status","parse","displayData","data","elementIndex","item","id","getElementById","innerText","decryptCodes","text","link","JSON","responseText","content","passcode","calAscii","atob","result","charCodeAt","String","fromCharCode","requestData","addEventListener","toggleAllDetails","now","details","today","textContent","Date","concat","getDate","slice","getMonth","getFullYear","console","detailsElement","createElement","initDetailsToggle","setAttribute","dataReceived","send","error","initElements"],"mappings":"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","file":"index.js","sourcesContent":["(function (window, document) {\r\n    const key = '323925712C8B49E48C00EBA72486203D',\r\n        elementsId = [\r\n            'details',\r\n            'print',\r\n            'today',\r\n            'hideRequests'\r\n        ],\r\n        elements = {};\r\n\r\n    init();\r\n\r\n    function init() {\r\n        try {\r\n            initElements();\r\n            initDetailsToggle();\r\n            requestData();\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    function initElements() {\r\n        let index, id;\r\n        for (index = 0; index < elementsId.length; index++) {\r\n            id = elementsId[index];\r\n            elements[id] = document.getElementById(id);\r\n        }\r\n\r\n        elements.details.addEventListener('click', toggleAllDetails, false);\r\n        elements.print.addEventListener('click', printDocument, false);\r\n        elements.hideRequests.addEventListener('click', hideRequests, false);\r\n        if (elements.today) {\r\n            const now = new Date();\r\n            elements.today.textContent = `(au ${('0' + now.getDate()).slice(-2)}/${('0' + (now.getMonth() + 1)).slice(-2)}/${now.getFullYear()})`;\r\n        }\r\n    }\r\n\r\n    function toggleAllDetails(event) {\r\n        event.preventDefault && event.preventDefault();\r\n\r\n        const elements = document.querySelectorAll('details');\r\n        let index = -1, element, hasClosed = false;\r\n        while (!hasClosed && ++index < elements.length) {\r\n            element = elements[index];\r\n            hasClosed = !element.attributes['open'];\r\n        }\r\n\r\n        if (hasClosed) {\r\n            while (index < elements.length) {\r\n                element = elements[index];\r\n                if (!element.attributes['open']) {\r\n                    element.setAttribute('open', '');\r\n                }\r\n\r\n                index++\r\n            }\r\n        } else {\r\n            index = 0;\r\n            while (index < elements.length) {\r\n                element = elements[index];\r\n                element.removeAttribute('open');\r\n                index++\r\n            }\r\n        }\r\n    }\r\n\r\n    function printDocument(event) {\r\n        event.preventDefault && event.preventDefault();\r\n        window.print();\r\n    }\r\n\r\n    function hideRequests(event) {\r\n        event.preventDefault && event.preventDefault();\r\n        elements.hideRequests.parentElement.parentElement.remove();\r\n    }\r\n\r\n    function initDetailsToggle() {\r\n        const detailsElement = document.createElement('details');\r\n        if (detailsElement.open !== false && detailsElement.open !== true) {\r\n            const details = document.querySelectorAll('details');\r\n            let index;\r\n            for (index = 0; index < details.length; index++) {\r\n                details[index].addEventListener('click', toggleDetails, false);\r\n            }\r\n        }\r\n    }\r\n\r\n    function toggleDetails(event) {\r\n        const openAttribute = event.currentTarget.attributes['open'];\r\n        if (openAttribute) {\r\n            event.currentTarget.removeAttribute('open');\r\n        } else {\r\n            event.currentTarget.setAttribute('open', '');\r\n        }\r\n    }\r\n\r\n    function requestData() {\r\n        const xhttp = new XMLHttpRequest();\r\n        xhttp.onreadystatechange = dataReceived;\r\n        xhttp.open('GET', '/data.json', true);\r\n        xhttp.send();\r\n    }\r\n\r\n    function dataReceived() {\r\n        if (this.readyState == 4 && this.status == 200) {\r\n            const data = JSON.parse(this.responseText);\r\n            displayData(data);\r\n        }\r\n    }\r\n\r\n    function displayData(data) {\r\n        let index, item, elements, element, elementIndex;\r\n\r\n        for (index = 0; index < data.length; index++) {\r\n            item = data[index];\r\n            if (item.id) {\r\n                elements = [document.getElementById(item.id)];\r\n            } else if (item.class) {\r\n                elements = document.getElementsByClassName(item.class);\r\n            }\r\n\r\n            if (elements.length > 0) {\r\n                for (elementIndex = 0; elementIndex < elements.length; elementIndex++) {\r\n                    element = elements[elementIndex];\r\n                    if (element) {\r\n                        element.innerText = decryptCodes(item.text, key);\r\n\r\n                        if (item.link) {\r\n                            element.href = decryptCodes(item.link, key);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function decryptCodes(content, passcode) {\r\n        const data = atob(content);\r\n        let index, calAscii, result = '';\r\n\r\n        for (index = 0; index < data.length; index++) {\r\n            calAscii = (data.charCodeAt(index) - passcode.charCodeAt(index % passcode.length));\r\n            result += String.fromCharCode(calAscii);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    function encryptCodes(content, passcode) {\r\n        let index, calAscii, result = '';\r\n        for (index = 0; index < content.length; index++) {\r\n            calAscii = (content.charCodeAt(index) + passcode.charCodeAt(index % passcode.length));\r\n            result += String.fromCharCode(calAscii);\r\n        }\r\n\r\n        return btoa(result);\r\n    }\r\n\r\n})(window, document);"]}